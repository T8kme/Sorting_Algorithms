// ---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "SortingAlgorithms.h"
#include "Table.h"

// ---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;

void compress_spaces(char *src) {
	char *dst = src;

	// skip leading spaces first
	while (isspace(*src))
		src++;

	int space = 0; // a character recently copied was a space

	for (; *src; src++)
		if (isspace(*src)) {
			if (!space) // append a space only after a non-space char
					* dst++ = *src;
			space = 1;
		}
		else {
			*dst++ = *src; // apped a non-space char always
			space = 0;
		}

	if (space) // truncate the terminating space
			dst--;
	*dst = 0; // terminate the resulting string
}

// ---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner) : TForm(Owner) {
}

// ---------------------------------------------------------------------------
void __fastcall TForm2::Exit1Click(TObject *Sender) {
	Application->Terminate();
}

// ---------------------------------------------------------------------------
void __fastcall TForm2::btnStartClick(TObject *Sender) {

	// first convert to AnsiString instead of Unicode.
	AnsiString ansiB(EditUnsorted->Text);

	// allocate enough memory for your char array (and the null terminator)
	char* str = new char[ansiB.Length() + 1];

	// copy the contents of the AnsiString into your char array
	strcpy(str, ansiB.c_str());

	// the rest of your code goes here

	/*
	 EditSorted->Text(T.showTab("Tablica wyjsciowa T: "));
	 Tablica t = ++T;
	 EditSorted->Text(t.showTab("  Po t = ++T t jest: "));
	 EditSorted->Text(T.showTab("           a T jest: "));

	 Tablica S(4, tab);
	 EditSorted->Text(S.showTab("Tablica wyjsciowa S: "));
	 Tablica s = S++;
	 EditSorted->Text(s.showTab("  Po s = S++ s jest: "));
	 EditSorted->Text(S.showTab("           a S jest: "));
	 */
	delete[]str;
}

// ---------------------------------------------------------------------------
void __fastcall TForm2::bSaveTimeClick(TObject *Sender) {
	String time = "cz:as";
	int number = ListBoxTime->Items->Count + 1;
	ListBoxTime->Items->Add((String)number + ". " + time);

}

// ---------------------------------------------------------------------------
void __fastcall TForm2::bClearClick(TObject *Sender) {
	ListBoxTime->Items->Clear();
}
// ---------------------------------------------------------------------------
